generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Local dev; will switch to "postgresql" for Azure later
  url      = env("DATABASE_URL")
}

model Customer {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  address   String?
  zip       String?
  city      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id         String      @id @default(cuid())
  sku        String      @unique
  name       String
  priceCents Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
}

model Order {
  id            String   @id @default(cuid())
  customer      Customer @relation(fields: [customerId], references: [id])
  customerId    String
  status        String   @default("PENDING") // was enum OrderStatus
  totalCents    Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  paymentStatus String   @default("UNPAID") // was enum PaymentStatus

  items OrderItem[]
}

model OrderItem {
  id             String  @id @default(cuid())
  order          Order   @relation(fields: [orderId], references: [id])
  orderId        String
  product        Product @relation(fields: [productId], references: [id])
  productId      String
  quantity       Int
  unitPriceCents Int
}

// Note: Prisma with SQLite (libsql driver) in recent versions may not support enums in some environments.
// We use string columns locally and can migrate to proper enums on PostgreSQL later.
